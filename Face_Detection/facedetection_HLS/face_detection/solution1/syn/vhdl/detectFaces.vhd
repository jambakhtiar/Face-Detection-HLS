-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity detectFaces is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    inData_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    inData_ce0 : OUT STD_LOGIC;
    inData_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    result_x_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    result_x_ce0 : OUT STD_LOGIC;
    result_x_we0 : OUT STD_LOGIC;
    result_x_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    result_y_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    result_y_ce0 : OUT STD_LOGIC;
    result_y_we0 : OUT STD_LOGIC;
    result_y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    result_w_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    result_w_ce0 : OUT STD_LOGIC;
    result_w_we0 : OUT STD_LOGIC;
    result_w_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    result_h_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    result_h_ce0 : OUT STD_LOGIC;
    result_h_we0 : OUT STD_LOGIC;
    result_h_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    result_size : OUT STD_LOGIC_VECTOR (31 downto 0);
    result_size_ap_vld : OUT STD_LOGIC );
end;


architecture behav of detectFaces is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "detectFaces_detectFaces,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a50ti-csg324-1L,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.541750,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=246,HLS_SYN_DSP=0,HLS_SYN_FF=63306,HLS_SYN_LUT=91542,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (57 downto 0) := "0000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (57 downto 0) := "0000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (57 downto 0) := "0000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (57 downto 0) := "0000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (57 downto 0) := "0000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (57 downto 0) := "0000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (57 downto 0) := "0001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (57 downto 0) := "0010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (57 downto 0) := "0100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (57 downto 0) := "1000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3F99999A : STD_LOGIC_VECTOR (31 downto 0) := "00111111100110011001100110011010";
    constant ap_const_lv32_41C00000 : STD_LOGIC_VECTOR (31 downto 0) := "01000001110000000000000000000000";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_43A00000 : STD_LOGIC_VECTOR (31 downto 0) := "01000011101000000000000000000000";
    constant ap_const_lv32_43700000 : STD_LOGIC_VECTOR (31 downto 0) := "01000011011100000000000000000000";
    constant ap_const_lv32_41C80000 : STD_LOGIC_VECTOR (31 downto 0) := "01000001110010000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1400000 : STD_LOGIC_VECTOR (31 downto 0) := "00000001010000000000000000000000";
    constant ap_const_lv32_F00000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000111100000000000000000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv64_3FE0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_BFE0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv28_1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv24_1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal counter : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal Data_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal Data_ce0 : STD_LOGIC;
    signal Data_we0 : STD_LOGIC;
    signal Data_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_359_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_393 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal icmp_ln2849_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2849_reg_1046 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln2851_fu_433_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln2851_reg_1050 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln2854_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2854_reg_1055 : STD_LOGIC_VECTOR (0 downto 0);
    signal factor_2_reg_1073 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_fu_365_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_2_reg_1079 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_fu_370_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_3_reg_1085 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_size_Scale_0_load_reg_1091 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal trunc_ln2885_1_fu_530_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln2885_1_reg_1096 : STD_LOGIC_VECTOR (22 downto 0);
    signal xs_sign_2_reg_1104 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_596_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_1110 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_1115 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_reg_1120 : STD_LOGIC_VECTOR (31 downto 0);
    signal xs_sign_3_reg_1125 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_680_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_1131 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln18_6_fu_698_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln18_6_reg_1136 : STD_LOGIC_VECTOR (8 downto 0);
    signal val_2_fu_706_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_2_reg_1141 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal val_3_fu_763_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_3_reg_1148 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln2815_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2815_reg_1155 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal icmp_ln2815_4_fu_810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2815_4_reg_1160 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_375_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_i_reg_1165 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal grp_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1170 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln2815_fu_825_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal grp_fu_389_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal dc_reg_1180 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal grp_fu_770_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal sdiv_ln3417_reg_1185 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_776_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sdiv_ln3418_reg_1190 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_fu_875_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1195 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal result_20_fu_926_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_20_reg_1200 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_21_fu_938_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_21_reg_1206 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_ratio_fu_965_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal x_ratio_reg_1212 : STD_LOGIC_VECTOR (27 downto 0);
    signal y_ratio_fu_988_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal y_ratio_reg_1217 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_15_reg_1222 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_reg_1227 : STD_LOGIC_VECTOR (31 downto 0);
    signal xs_sign_reg_1232 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_19_fu_1034_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_19_reg_1237 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal result_x_Scale_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal result_x_Scale_ce0 : STD_LOGIC;
    signal result_x_Scale_we0 : STD_LOGIC;
    signal result_x_Scale_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_y_Scale_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal result_y_Scale_ce0 : STD_LOGIC;
    signal result_y_Scale_we0 : STD_LOGIC;
    signal result_y_Scale_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_w_Scale_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal result_w_Scale_ce0 : STD_LOGIC;
    signal result_w_Scale_we0 : STD_LOGIC;
    signal result_w_Scale_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_h_Scale_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal result_h_Scale_ce0 : STD_LOGIC;
    signal result_h_Scale_we0 : STD_LOGIC;
    signal result_h_Scale_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG1_data_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal IMG1_data_ce0 : STD_LOGIC;
    signal IMG1_data_we0 : STD_LOGIC;
    signal IMG1_data_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_ap_start : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_ap_done : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_ap_idle : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_ap_ready : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_inData_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_inData_ce0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_Data_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_Data_ce0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_Data_we0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_Data_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_start : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_done : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_idle : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_ready : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_x_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_x_ce0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_x_we0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_x_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_y_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_y_ce0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_y_we0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_w_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_w_ce0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_w_we0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_w_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_h_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_h_ce0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_h_we0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_h_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_start : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_done : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_idle : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_ready : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_Scale_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_Scale_ce0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_ce0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_we0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_Scale_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_Scale_ce0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_ce0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_we0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_Scale_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_Scale_ce0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_ce0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_we0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_Scale_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_Scale_ce0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_ce0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_we0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_ap_start : STD_LOGIC;
    signal grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_ap_done : STD_LOGIC;
    signal grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_ap_idle : STD_LOGIC;
    signal grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_ap_ready : STD_LOGIC;
    signal grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_IMG1_data_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_IMG1_data_ce0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_IMG1_data_we0 : STD_LOGIC;
    signal grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_IMG1_data_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_Data_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_Data_ce0 : STD_LOGIC;
    signal grp_processImage_fu_299_ap_start : STD_LOGIC;
    signal grp_processImage_fu_299_ap_done : STD_LOGIC;
    signal grp_processImage_fu_299_ap_idle : STD_LOGIC;
    signal grp_processImage_fu_299_ap_ready : STD_LOGIC;
    signal grp_processImage_fu_299_AllCandidates_x_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_processImage_fu_299_AllCandidates_x_ce0 : STD_LOGIC;
    signal grp_processImage_fu_299_AllCandidates_x_we0 : STD_LOGIC;
    signal grp_processImage_fu_299_AllCandidates_x_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_processImage_fu_299_AllCandidates_y_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_processImage_fu_299_AllCandidates_y_ce0 : STD_LOGIC;
    signal grp_processImage_fu_299_AllCandidates_y_we0 : STD_LOGIC;
    signal grp_processImage_fu_299_AllCandidates_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_processImage_fu_299_AllCandidates_w_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_processImage_fu_299_AllCandidates_w_ce0 : STD_LOGIC;
    signal grp_processImage_fu_299_AllCandidates_w_we0 : STD_LOGIC;
    signal grp_processImage_fu_299_AllCandidates_w_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_processImage_fu_299_AllCandidates_h_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_processImage_fu_299_AllCandidates_h_ce0 : STD_LOGIC;
    signal grp_processImage_fu_299_AllCandidates_h_we0 : STD_LOGIC;
    signal grp_processImage_fu_299_AllCandidates_h_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_processImage_fu_299_IMG1_data_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_processImage_fu_299_IMG1_data_ce0 : STD_LOGIC;
    signal grp_processImage_fu_299_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_processImage_fu_299_grp_fu_359_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_processImage_fu_299_grp_fu_359_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_processImage_fu_299_grp_fu_359_p_ce : STD_LOGIC;
    signal grp_processImage_fu_299_grp_fu_375_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_processImage_fu_299_grp_fu_375_p_ce : STD_LOGIC;
    signal grp_processImage_fu_299_grp_fu_378_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_processImage_fu_299_grp_fu_378_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_processImage_fu_299_grp_fu_378_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_processImage_fu_299_grp_fu_378_p_ce : STD_LOGIC;
    signal grp_processImage_fu_299_grp_fu_383_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_processImage_fu_299_grp_fu_383_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_processImage_fu_299_grp_fu_383_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_processImage_fu_299_grp_fu_383_p_ce : STD_LOGIC;
    signal grp_processImage_fu_299_grp_fu_389_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_processImage_fu_299_grp_fu_389_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_processImage_fu_299_grp_fu_389_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_processImage_fu_299_grp_fu_389_p_ce : STD_LOGIC;
    signal storemerge_reg_239 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_start_reg : STD_LOGIC := '0';
    signal and_ln2885_fu_558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_ap_start_reg : STD_LOGIC := '0';
    signal grp_processImage_fu_299_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal add_ln2853_fu_440_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal factor_fu_224 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal res_size_Scale_0_fu_228 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal grp_fu_359_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_359_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal grp_fu_375_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_378_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_378_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_fu_383_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_383_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_389_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_389_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln2849_1_fu_407_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln2849_fu_403_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_s_fu_417_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_fu_425_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal data_2_fu_476_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xs_exp_2_fu_479_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln2885_fu_489_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln2885_1_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2885_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln2885_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_3_fu_517_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xs_exp_3_fu_520_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln2885_3_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2885_2_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln2885_1_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln2885_1_fu_511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln2885_2_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mantissa_2_fu_572_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln317_fu_586_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln317_fu_590_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln18_2_fu_604_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln18_5_fu_610_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln18_4_fu_614_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln18_6_fu_622_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_2_fu_582_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln18_2_fu_626_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal lshr_ln18_2_fu_630_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal shl_ln18_2_fu_636_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln317_1_fu_670_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln317_1_fu_674_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln18_3_fu_688_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln18_7_fu_694_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mantissa_3_fu_711_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln18_8_fu_724_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_3_fu_720_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln18_3_fu_727_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal lshr_ln18_3_fu_731_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal shl_ln18_3_fu_737_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_33_fu_743_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_753_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_770_p0 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_770_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_776_p0 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal bitcast_ln2815_fu_786_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_790_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln2815_fu_800_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln2815_fu_816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln2815_fu_820_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_fu_834_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln505_fu_847_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal mantissa_fu_851_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal xs_exp_fu_837_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln486_fu_865_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln486_fu_869_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln18_fu_883_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln18_fu_889_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln18_fu_893_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln18_4_fu_901_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_fu_861_p1 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln18_fu_905_p1 : STD_LOGIC_VECTOR (136 downto 0);
    signal result_13_fu_921_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_17_fu_933_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln3417_fu_945_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sub_ln3417_fu_948_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal select_ln3417_fu_954_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln3417_fu_961_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln3418_fu_972_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln3418_fu_975_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln3418_fu_981_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal lshr_ln18_fu_909_p2 : STD_LOGIC_VECTOR (136 downto 0);
    signal shl_ln18_fu_915_p2 : STD_LOGIC_VECTOR (136 downto 0);
    signal val_fu_1023_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_fu_1028_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_359_ce : STD_LOGIC;
    signal grp_fu_375_ce : STD_LOGIC;
    signal grp_fu_378_ce : STD_LOGIC;
    signal grp_fu_378_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_383_ce : STD_LOGIC;
    signal grp_fu_383_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_389_ce : STD_LOGIC;
    signal grp_fu_770_ap_start : STD_LOGIC;
    signal grp_fu_770_ap_done : STD_LOGIC;
    signal grp_fu_776_ap_start : STD_LOGIC;
    signal grp_fu_776_ap_done : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component detectFaces_detectFaces_Pipeline_VITIS_LOOP_2850_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        add_ln2851 : IN STD_LOGIC_VECTOR (16 downto 0);
        inData_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        inData_ce0 : OUT STD_LOGIC;
        inData_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        Data_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        Data_ce0 : OUT STD_LOGIC;
        Data_we0 : OUT STD_LOGIC;
        Data_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component detectFaces_detectFaces_Pipeline_VITIS_LOOP_2855_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        result_x_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_x_ce0 : OUT STD_LOGIC;
        result_x_we0 : OUT STD_LOGIC;
        result_x_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        result_y_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_y_ce0 : OUT STD_LOGIC;
        result_y_we0 : OUT STD_LOGIC;
        result_y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        result_w_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_w_ce0 : OUT STD_LOGIC;
        result_w_we0 : OUT STD_LOGIC;
        result_w_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        result_h_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_h_ce0 : OUT STD_LOGIC;
        result_h_we0 : OUT STD_LOGIC;
        result_h_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component detectFaces_detectFaces_Pipeline_VITIS_LOOP_2922_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        result_x_Scale_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_x_Scale_ce0 : OUT STD_LOGIC;
        result_x_Scale_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        result_x_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_x_ce0 : OUT STD_LOGIC;
        result_x_we0 : OUT STD_LOGIC;
        result_x_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        result_y_Scale_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_y_Scale_ce0 : OUT STD_LOGIC;
        result_y_Scale_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        result_y_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_y_ce0 : OUT STD_LOGIC;
        result_y_we0 : OUT STD_LOGIC;
        result_y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        result_w_Scale_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_w_Scale_ce0 : OUT STD_LOGIC;
        result_w_Scale_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        result_w_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_w_ce0 : OUT STD_LOGIC;
        result_w_we0 : OUT STD_LOGIC;
        result_w_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        result_h_Scale_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_h_Scale_ce0 : OUT STD_LOGIC;
        result_h_Scale_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        result_h_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_h_ce0 : OUT STD_LOGIC;
        result_h_we0 : OUT STD_LOGIC;
        result_h_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component detectFaces_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        y_ratio : IN STD_LOGIC_VECTOR (23 downto 0);
        result_16 : IN STD_LOGIC_VECTOR (31 downto 0);
        IMG1_data_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        IMG1_data_ce0 : OUT STD_LOGIC;
        IMG1_data_we0 : OUT STD_LOGIC;
        IMG1_data_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        result_15 : IN STD_LOGIC_VECTOR (31 downto 0);
        sext_ln3417_1 : IN STD_LOGIC_VECTOR (27 downto 0);
        Data_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        Data_ce0 : OUT STD_LOGIC;
        Data_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component detectFaces_processImage IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        factor : IN STD_LOGIC_VECTOR (31 downto 0);
        sum_row : IN STD_LOGIC_VECTOR (31 downto 0);
        sum_col : IN STD_LOGIC_VECTOR (31 downto 0);
        AllCandidates_x_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        AllCandidates_x_ce0 : OUT STD_LOGIC;
        AllCandidates_x_we0 : OUT STD_LOGIC;
        AllCandidates_x_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        AllCandidates_y_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        AllCandidates_y_ce0 : OUT STD_LOGIC;
        AllCandidates_y_we0 : OUT STD_LOGIC;
        AllCandidates_y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        AllCandidates_w_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        AllCandidates_w_ce0 : OUT STD_LOGIC;
        AllCandidates_w_we0 : OUT STD_LOGIC;
        AllCandidates_w_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        AllCandidates_h_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        AllCandidates_h_ce0 : OUT STD_LOGIC;
        AllCandidates_h_we0 : OUT STD_LOGIC;
        AllCandidates_h_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        IMG1_data_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        IMG1_data_ce0 : OUT STD_LOGIC;
        IMG1_data_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        winSize_width_val : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_359_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_359_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_359_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_359_p_ce : OUT STD_LOGIC;
        grp_fu_375_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_375_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_375_p_ce : OUT STD_LOGIC;
        grp_fu_378_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_378_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_378_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_378_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_378_p_ce : OUT STD_LOGIC;
        grp_fu_383_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_383_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_383_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_383_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_383_p_ce : OUT STD_LOGIC;
        grp_fu_389_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_389_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_389_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_389_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_389_p_ce : OUT STD_LOGIC );
    end component;


    component detectFaces_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component detectFaces_fdiv_32ns_32ns_32_16_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component detectFaces_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component detectFaces_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component detectFaces_dadd_64ns_64ns_64_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component detectFaces_sdiv_27ns_32ns_27_31_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (26 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component detectFaces_sdiv_26ns_32ns_24_30_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (25 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component detectFaces_Data_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component detectFaces_result_x_Scale_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component detectFaces_IMG1_data_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    Data_U : component detectFaces_Data_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 76800,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Data_address0,
        ce0 => Data_ce0,
        we0 => Data_we0,
        d0 => grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_Data_d0,
        q0 => Data_q0);

    result_x_Scale_U : component detectFaces_result_x_Scale_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => result_x_Scale_address0,
        ce0 => result_x_Scale_ce0,
        we0 => result_x_Scale_we0,
        d0 => grp_processImage_fu_299_AllCandidates_x_d0,
        q0 => result_x_Scale_q0);

    result_y_Scale_U : component detectFaces_result_x_Scale_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => result_y_Scale_address0,
        ce0 => result_y_Scale_ce0,
        we0 => result_y_Scale_we0,
        d0 => grp_processImage_fu_299_AllCandidates_y_d0,
        q0 => result_y_Scale_q0);

    result_w_Scale_U : component detectFaces_result_x_Scale_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => result_w_Scale_address0,
        ce0 => result_w_Scale_ce0,
        we0 => result_w_Scale_we0,
        d0 => grp_processImage_fu_299_AllCandidates_w_d0,
        q0 => result_w_Scale_q0);

    result_h_Scale_U : component detectFaces_result_x_Scale_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => result_h_Scale_address0,
        ce0 => result_h_Scale_ce0,
        we0 => result_h_Scale_we0,
        d0 => grp_processImage_fu_299_AllCandidates_h_d0,
        q0 => result_h_Scale_q0);

    IMG1_data_U : component detectFaces_IMG1_data_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 76800,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => IMG1_data_address0,
        ce0 => IMG1_data_ce0,
        we0 => IMG1_data_we0,
        d0 => grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_IMG1_data_d0,
        q0 => IMG1_data_q0);

    grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251 : component detectFaces_detectFaces_Pipeline_VITIS_LOOP_2850_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_ap_start,
        ap_done => grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_ap_done,
        ap_idle => grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_ap_idle,
        ap_ready => grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_ap_ready,
        add_ln2851 => add_ln2851_reg_1050,
        inData_address0 => grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_inData_address0,
        inData_ce0 => grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_inData_ce0,
        inData_q0 => inData_q0,
        Data_address0 => grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_Data_address0,
        Data_ce0 => grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_Data_ce0,
        Data_we0 => grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_Data_we0,
        Data_d0 => grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_Data_d0);

    grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260 : component detectFaces_detectFaces_Pipeline_VITIS_LOOP_2855_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_start,
        ap_done => grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_done,
        ap_idle => grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_idle,
        ap_ready => grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_ready,
        result_x_address0 => grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_x_address0,
        result_x_ce0 => grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_x_ce0,
        result_x_we0 => grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_x_we0,
        result_x_d0 => grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_x_d0,
        result_y_address0 => grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_y_address0,
        result_y_ce0 => grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_y_ce0,
        result_y_we0 => grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_y_we0,
        result_y_d0 => grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_y_d0,
        result_w_address0 => grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_w_address0,
        result_w_ce0 => grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_w_ce0,
        result_w_we0 => grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_w_we0,
        result_w_d0 => grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_w_d0,
        result_h_address0 => grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_h_address0,
        result_h_ce0 => grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_h_ce0,
        result_h_we0 => grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_h_we0,
        result_h_d0 => grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_h_d0);

    grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272 : component detectFaces_detectFaces_Pipeline_VITIS_LOOP_2922_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_start,
        ap_done => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_done,
        ap_idle => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_idle,
        ap_ready => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_ready,
        result_x_Scale_address0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_Scale_address0,
        result_x_Scale_ce0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_Scale_ce0,
        result_x_Scale_q0 => result_x_Scale_q0,
        result_x_address0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_address0,
        result_x_ce0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_ce0,
        result_x_we0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_we0,
        result_x_d0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_d0,
        result_y_Scale_address0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_Scale_address0,
        result_y_Scale_ce0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_Scale_ce0,
        result_y_Scale_q0 => result_y_Scale_q0,
        result_y_address0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_address0,
        result_y_ce0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_ce0,
        result_y_we0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_we0,
        result_y_d0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_d0,
        result_w_Scale_address0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_Scale_address0,
        result_w_Scale_ce0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_Scale_ce0,
        result_w_Scale_q0 => result_w_Scale_q0,
        result_w_address0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_address0,
        result_w_ce0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_ce0,
        result_w_we0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_we0,
        result_w_d0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_d0,
        result_h_Scale_address0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_Scale_address0,
        result_h_Scale_ce0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_Scale_ce0,
        result_h_Scale_q0 => result_h_Scale_q0,
        result_h_address0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_address0,
        result_h_ce0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_ce0,
        result_h_we0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_we0,
        result_h_d0 => grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_d0);

    grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288 : component detectFaces_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_ap_start,
        ap_done => grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_ap_done,
        ap_idle => grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_ap_idle,
        ap_ready => grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_ap_ready,
        y_ratio => y_ratio_reg_1217,
        result_16 => result_21_reg_1206,
        IMG1_data_address0 => grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_IMG1_data_address0,
        IMG1_data_ce0 => grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_IMG1_data_ce0,
        IMG1_data_we0 => grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_IMG1_data_we0,
        IMG1_data_d0 => grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_IMG1_data_d0,
        result_15 => result_20_reg_1200,
        sext_ln3417_1 => x_ratio_reg_1212,
        Data_address0 => grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_Data_address0,
        Data_ce0 => grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_Data_ce0,
        Data_q0 => Data_q0);

    grp_processImage_fu_299 : component detectFaces_processImage
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_processImage_fu_299_ap_start,
        ap_done => grp_processImage_fu_299_ap_done,
        ap_idle => grp_processImage_fu_299_ap_idle,
        ap_ready => grp_processImage_fu_299_ap_ready,
        factor => factor_2_reg_1073,
        sum_row => result_21_reg_1206,
        sum_col => result_20_reg_1200,
        AllCandidates_x_address0 => grp_processImage_fu_299_AllCandidates_x_address0,
        AllCandidates_x_ce0 => grp_processImage_fu_299_AllCandidates_x_ce0,
        AllCandidates_x_we0 => grp_processImage_fu_299_AllCandidates_x_we0,
        AllCandidates_x_d0 => grp_processImage_fu_299_AllCandidates_x_d0,
        AllCandidates_y_address0 => grp_processImage_fu_299_AllCandidates_y_address0,
        AllCandidates_y_ce0 => grp_processImage_fu_299_AllCandidates_y_ce0,
        AllCandidates_y_we0 => grp_processImage_fu_299_AllCandidates_y_we0,
        AllCandidates_y_d0 => grp_processImage_fu_299_AllCandidates_y_d0,
        AllCandidates_w_address0 => grp_processImage_fu_299_AllCandidates_w_address0,
        AllCandidates_w_ce0 => grp_processImage_fu_299_AllCandidates_w_ce0,
        AllCandidates_w_we0 => grp_processImage_fu_299_AllCandidates_w_we0,
        AllCandidates_w_d0 => grp_processImage_fu_299_AllCandidates_w_d0,
        AllCandidates_h_address0 => grp_processImage_fu_299_AllCandidates_h_address0,
        AllCandidates_h_ce0 => grp_processImage_fu_299_AllCandidates_h_ce0,
        AllCandidates_h_we0 => grp_processImage_fu_299_AllCandidates_h_we0,
        AllCandidates_h_d0 => grp_processImage_fu_299_AllCandidates_h_d0,
        p_read => res_size_Scale_0_fu_228,
        IMG1_data_address0 => grp_processImage_fu_299_IMG1_data_address0,
        IMG1_data_ce0 => grp_processImage_fu_299_IMG1_data_ce0,
        IMG1_data_q0 => IMG1_data_q0,
        winSize_width_val => result_19_reg_1237,
        ap_return => grp_processImage_fu_299_ap_return,
        grp_fu_359_p_din0 => grp_processImage_fu_299_grp_fu_359_p_din0,
        grp_fu_359_p_din1 => grp_processImage_fu_299_grp_fu_359_p_din1,
        grp_fu_359_p_dout0 => grp_fu_359_p2,
        grp_fu_359_p_ce => grp_processImage_fu_299_grp_fu_359_p_ce,
        grp_fu_375_p_din0 => grp_processImage_fu_299_grp_fu_375_p_din0,
        grp_fu_375_p_dout0 => grp_fu_375_p1,
        grp_fu_375_p_ce => grp_processImage_fu_299_grp_fu_375_p_ce,
        grp_fu_378_p_din0 => grp_processImage_fu_299_grp_fu_378_p_din0,
        grp_fu_378_p_din1 => grp_processImage_fu_299_grp_fu_378_p_din1,
        grp_fu_378_p_opcode => grp_processImage_fu_299_grp_fu_378_p_opcode,
        grp_fu_378_p_dout0 => grp_fu_378_p2,
        grp_fu_378_p_ce => grp_processImage_fu_299_grp_fu_378_p_ce,
        grp_fu_383_p_din0 => grp_processImage_fu_299_grp_fu_383_p_din0,
        grp_fu_383_p_din1 => grp_processImage_fu_299_grp_fu_383_p_din1,
        grp_fu_383_p_opcode => grp_processImage_fu_299_grp_fu_383_p_opcode,
        grp_fu_383_p_dout0 => grp_fu_383_p2,
        grp_fu_383_p_ce => grp_processImage_fu_299_grp_fu_383_p_ce,
        grp_fu_389_p_din0 => grp_processImage_fu_299_grp_fu_389_p_din0,
        grp_fu_389_p_din1 => grp_processImage_fu_299_grp_fu_389_p_din1,
        grp_fu_389_p_opcode => grp_processImage_fu_299_grp_fu_389_p_opcode,
        grp_fu_389_p_dout0 => grp_fu_389_p2,
        grp_fu_389_p_ce => grp_processImage_fu_299_grp_fu_389_p_ce);

    fmul_32ns_32ns_32_4_max_dsp_1_U860 : component detectFaces_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_359_p0,
        din1 => grp_fu_359_p1,
        ce => grp_fu_359_ce,
        dout => grp_fu_359_p2);

    fdiv_32ns_32ns_32_16_no_dsp_1_U861 : component detectFaces_fdiv_32ns_32ns_32_16_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_43A00000,
        din1 => factor_fu_224,
        ce => ap_const_logic_1,
        dout => grp_fu_365_p2);

    fdiv_32ns_32ns_32_16_no_dsp_1_U862 : component detectFaces_fdiv_32ns_32ns_32_16_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_43700000,
        din1 => factor_fu_224,
        ce => ap_const_logic_1,
        dout => grp_fu_370_p2);

    fpext_32ns_64_2_no_dsp_1_U863 : component detectFaces_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_375_p0,
        ce => grp_fu_375_ce,
        dout => grp_fu_375_p1);

    fcmp_32ns_32ns_1_2_no_dsp_1_U864 : component detectFaces_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_378_p0,
        din1 => grp_fu_378_p1,
        ce => grp_fu_378_ce,
        opcode => grp_fu_378_opcode,
        dout => grp_fu_378_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U865 : component detectFaces_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_383_p0,
        din1 => grp_fu_383_p1,
        ce => grp_fu_383_ce,
        opcode => grp_fu_383_opcode,
        dout => grp_fu_383_p2);

    dadd_64ns_64ns_64_8_full_dsp_1_U866 : component detectFaces_dadd_64ns_64ns_64_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_389_p0,
        din1 => grp_fu_389_p1,
        ce => grp_fu_389_ce,
        dout => grp_fu_389_p2);

    sdiv_27ns_32ns_27_31_seq_1_U867 : component detectFaces_sdiv_27ns_32ns_27_31_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 31,
        din0_WIDTH => 27,
        din1_WIDTH => 32,
        dout_WIDTH => 27)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_770_ap_start,
        done => grp_fu_770_ap_done,
        din0 => grp_fu_770_p0,
        din1 => grp_fu_770_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_770_p2);

    sdiv_26ns_32ns_24_30_seq_1_U868 : component detectFaces_sdiv_26ns_32ns_24_30_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 30,
        din0_WIDTH => 26,
        din1_WIDTH => 32,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_776_ap_start,
        done => grp_fu_776_ap_done,
        din0 => grp_fu_776_p0,
        din1 => val_3_reg_1148,
        ce => ap_const_logic_1,
        dout => grp_fu_776_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln2849_fu_411_p2 = ap_const_lv1_1))) then 
                    grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_ap_ready = ap_const_logic_1)) then 
                    grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln2854_reg_1055 = ap_const_lv1_1) and (icmp_ln2849_reg_1046 = ap_const_lv1_1))) then 
                    grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_ready = ap_const_logic_1)) then 
                    grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_lv1_0 = and_ln2885_fu_558_p2) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                    grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_ready = ap_const_logic_1)) then 
                    grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                    grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_ap_ready = ap_const_logic_1)) then 
                    grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_processImage_fu_299_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_processImage_fu_299_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
                    grp_processImage_fu_299_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_processImage_fu_299_ap_ready = ap_const_logic_1)) then 
                    grp_processImage_fu_299_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    factor_fu_224_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and ((icmp_ln2854_reg_1055 = ap_const_lv1_0) or (icmp_ln2849_reg_1046 = ap_const_lv1_0)))) then 
                factor_fu_224 <= ap_const_lv32_3F800000;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                factor_fu_224 <= reg_393;
            end if; 
        end if;
    end process;

    res_size_Scale_0_fu_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and ((icmp_ln2854_reg_1055 = ap_const_lv1_0) or (icmp_ln2849_reg_1046 = ap_const_lv1_0)))) then 
                res_size_Scale_0_fu_228 <= ap_const_lv32_0;
            elsif (((grp_processImage_fu_299_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then 
                res_size_Scale_0_fu_228 <= grp_processImage_fu_299_ap_return;
            end if; 
        end if;
    end process;

    storemerge_reg_239_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
                storemerge_reg_239 <= ap_const_lv32_0;
            elsif (((grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state56))) then 
                storemerge_reg_239 <= res_size_Scale_0_load_reg_1091;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    add_ln2851_reg_1050(16 downto 6) <= add_ln2851_fu_433_p2(16 downto 6);
                icmp_ln2849_reg_1046 <= icmp_ln2849_fu_411_p2;
                icmp_ln2854_reg_1055 <= icmp_ln2854_fu_452_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                conv_i_reg_1165 <= grp_fu_375_p1;
                tmp_29_reg_1170 <= grp_fu_378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln2849_fu_411_p2 = ap_const_lv1_1))) then
                counter <= add_ln2853_fu_440_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                dc_2_reg_1079 <= grp_fu_365_p2;
                dc_3_reg_1085 <= grp_fu_370_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                dc_reg_1180 <= grp_fu_389_p2;
                sdiv_ln3417_reg_1185 <= grp_fu_770_p2;
                sdiv_ln3418_reg_1190 <= grp_fu_776_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                factor_2_reg_1073 <= factor_fu_224;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                icmp_ln2815_4_reg_1160 <= icmp_ln2815_4_fu_810_p2;
                icmp_ln2815_reg_1155 <= icmp_ln2815_fu_804_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state23))) then
                reg_393 <= grp_fu_359_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                res_size_Scale_0_load_reg_1091 <= res_size_Scale_0_fu_228;
                select_ln18_6_reg_1136 <= select_ln18_6_fu_698_p3;
                tmp_12_reg_1110 <= add_ln317_fu_590_p2(8 downto 8);
                tmp_14_reg_1131 <= add_ln317_1_fu_674_p2(8 downto 8);
                tmp_31_reg_1115 <= lshr_ln18_2_fu_630_p2(55 downto 24);
                tmp_32_reg_1120 <= shl_ln18_2_fu_636_p2(55 downto 24);
                trunc_ln2885_1_reg_1096 <= trunc_ln2885_1_fu_530_p1;
                xs_sign_2_reg_1104 <= data_2_fu_476_p1(31 downto 31);
                xs_sign_3_reg_1125 <= data_3_fu_517_p1(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                result_19_reg_1237 <= result_19_fu_1034_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                result_20_reg_1200 <= result_20_fu_926_p3;
                result_21_reg_1206 <= result_21_fu_938_p3;
                tmp_15_reg_1222 <= lshr_ln18_fu_909_p2(84 downto 53);
                tmp_16_reg_1227 <= shl_ln18_fu_915_p2(84 downto 53);
                tmp_reg_1195 <= add_ln486_fu_869_p2(11 downto 11);
                x_ratio_reg_1212 <= x_ratio_fu_965_p2;
                xs_sign_reg_1232 <= data_fu_834_p1(63 downto 63);
                y_ratio_reg_1217 <= y_ratio_fu_988_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                val_2_reg_1141 <= val_2_fu_706_p3;
                val_3_reg_1148 <= val_3_fu_763_p3;
            end if;
        end if;
    end process;
    add_ln2851_reg_1050(5 downto 0) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln2849_reg_1046, icmp_ln2854_reg_1055, ap_CS_fsm_state20, ap_CS_fsm_state53, grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_done, grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_done, grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_ap_done, grp_processImage_fu_299_ap_done, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, and_ln2885_fu_558_p2, ap_CS_fsm_state55)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and ((icmp_ln2854_reg_1055 = ap_const_lv1_0) or (icmp_ln2849_reg_1046 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln2854_reg_1055 = ap_const_lv1_1) and (icmp_ln2849_reg_1046 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((ap_const_lv1_0 = and_ln2885_fu_558_p2) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                if (((grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                else
                    ap_NS_fsm <= ap_ST_fsm_state53;
                end if;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                if (((grp_processImage_fu_299_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state56 => 
                if (((grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state56))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state57 => 
                if (((grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    Data_address0_assign_proc : process(icmp_ln2849_reg_1046, ap_CS_fsm_state53, grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_Data_address0, grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_Data_address0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            Data_address0 <= grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_Data_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln2849_reg_1046 = ap_const_lv1_1))) then 
            Data_address0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_Data_address0;
        else 
            Data_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Data_ce0_assign_proc : process(icmp_ln2849_reg_1046, ap_CS_fsm_state53, grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_Data_ce0, grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_Data_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            Data_ce0 <= grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_Data_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln2849_reg_1046 = ap_const_lv1_1))) then 
            Data_ce0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_Data_ce0;
        else 
            Data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Data_we0_assign_proc : process(icmp_ln2849_reg_1046, grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_Data_we0, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln2849_reg_1046 = ap_const_lv1_1))) then 
            Data_we0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_Data_we0;
        else 
            Data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    IMG1_data_address0_assign_proc : process(ap_CS_fsm_state53, grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_IMG1_data_address0, grp_processImage_fu_299_IMG1_data_address0, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            IMG1_data_address0 <= grp_processImage_fu_299_IMG1_data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            IMG1_data_address0 <= grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_IMG1_data_address0;
        else 
            IMG1_data_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    IMG1_data_ce0_assign_proc : process(ap_CS_fsm_state53, grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_IMG1_data_ce0, grp_processImage_fu_299_IMG1_data_ce0, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            IMG1_data_ce0 <= grp_processImage_fu_299_IMG1_data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            IMG1_data_ce0 <= grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_IMG1_data_ce0;
        else 
            IMG1_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    IMG1_data_we0_assign_proc : process(ap_CS_fsm_state53, grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_IMG1_data_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            IMG1_data_we0 <= grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_IMG1_data_we0;
        else 
            IMG1_data_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln2851_fu_433_p2 <= std_logic_vector(unsigned(tmp_s_fu_417_p3) + unsigned(tmp_30_fu_425_p3));
    add_ln2853_fu_440_p2 <= std_logic_vector(unsigned(counter) + unsigned(ap_const_lv32_1));
    add_ln317_1_fu_674_p2 <= std_logic_vector(unsigned(zext_ln317_1_fu_670_p1) + unsigned(ap_const_lv9_181));
    add_ln317_fu_590_p2 <= std_logic_vector(unsigned(zext_ln317_fu_586_p1) + unsigned(ap_const_lv9_181));
    add_ln486_fu_869_p2 <= std_logic_vector(unsigned(zext_ln486_fu_865_p1) + unsigned(ap_const_lv12_C01));
    and_ln2815_fu_820_p2 <= (tmp_29_reg_1170 and or_ln2815_fu_816_p2);
    and_ln2885_1_fu_511_p2 <= (or_ln2885_fu_505_p2 and grp_fu_378_p2);
    and_ln2885_2_fu_552_p2 <= (or_ln2885_1_fu_546_p2 and grp_fu_383_p2);
    and_ln2885_fu_558_p2 <= (and_ln2885_2_fu_552_p2 and and_ln2885_1_fu_511_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;

    ap_ST_fsm_state53_blk_assign_proc : process(grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_ap_done)
    begin
        if ((grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state53_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state53_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state54_blk <= ap_const_logic_0;

    ap_ST_fsm_state55_blk_assign_proc : process(grp_processImage_fu_299_ap_done)
    begin
        if ((grp_processImage_fu_299_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state55_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state55_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state56_blk_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_done)
    begin
        if ((grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state56_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state56_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state57_blk_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_done)
    begin
        if ((grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state57_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state57_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state2_on_subcall_done_assign_proc : process(icmp_ln2849_reg_1046, grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_ap_done = ap_const_logic_0) and (icmp_ln2849_reg_1046 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state58)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state58)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln2815_fu_786_p1 <= reg_393;
    data_2_fu_476_p1 <= dc_2_reg_1079;
    data_3_fu_517_p1 <= dc_3_reg_1085;
    data_fu_834_p1 <= dc_reg_1180;
    grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_ap_start <= grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_ap_start_reg;
    grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_start <= grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_ap_start_reg;
    grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_start <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_ap_start_reg;
    grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_ap_start <= grp_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1_fu_288_ap_start_reg;

    grp_fu_359_ce_assign_proc : process(grp_processImage_fu_299_grp_fu_359_p_ce, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_359_ce <= grp_processImage_fu_299_grp_fu_359_p_ce;
        else 
            grp_fu_359_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_359_p0_assign_proc : process(factor_2_reg_1073, ap_CS_fsm_state20, grp_processImage_fu_299_grp_fu_359_p_din0, ap_CS_fsm_state55, factor_fu_224, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_359_p0 <= grp_processImage_fu_299_grp_fu_359_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_359_p0 <= factor_2_reg_1073;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_359_p0 <= factor_fu_224;
        else 
            grp_fu_359_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_359_p1_assign_proc : process(ap_CS_fsm_state20, grp_processImage_fu_299_grp_fu_359_p_din1, ap_CS_fsm_state55, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_359_p1 <= grp_processImage_fu_299_grp_fu_359_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_359_p1 <= ap_const_lv32_41C00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_359_p1 <= ap_const_lv32_3F99999A;
        else 
            grp_fu_359_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_375_ce_assign_proc : process(grp_processImage_fu_299_grp_fu_375_p_ce, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_375_ce <= grp_processImage_fu_299_grp_fu_375_p_ce;
        else 
            grp_fu_375_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_375_p0_assign_proc : process(reg_393, ap_CS_fsm_state42, grp_processImage_fu_299_grp_fu_375_p_din0, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_375_p0 <= grp_processImage_fu_299_grp_fu_375_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_375_p0 <= reg_393;
        else 
            grp_fu_375_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_378_ce_assign_proc : process(grp_processImage_fu_299_grp_fu_378_p_ce, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_378_ce <= grp_processImage_fu_299_grp_fu_378_p_ce;
        else 
            grp_fu_378_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_378_opcode_assign_proc : process(ap_CS_fsm_state42, grp_processImage_fu_299_grp_fu_378_p_opcode, ap_CS_fsm_state55, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_378_opcode <= grp_processImage_fu_299_grp_fu_378_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_378_opcode <= ap_const_lv5_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_378_opcode <= ap_const_lv5_2;
        else 
            grp_fu_378_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_378_p0_assign_proc : process(reg_393, dc_2_reg_1079, ap_CS_fsm_state42, grp_processImage_fu_299_grp_fu_378_p_din0, ap_CS_fsm_state55, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_378_p0 <= grp_processImage_fu_299_grp_fu_378_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_378_p0 <= reg_393;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_378_p0 <= dc_2_reg_1079;
        else 
            grp_fu_378_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_378_p1_assign_proc : process(ap_CS_fsm_state42, grp_processImage_fu_299_grp_fu_378_p_din1, ap_CS_fsm_state55, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_378_p1 <= grp_processImage_fu_299_grp_fu_378_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_378_p1 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_378_p1 <= ap_const_lv32_41C80000;
        else 
            grp_fu_378_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_383_ce_assign_proc : process(grp_processImage_fu_299_grp_fu_383_p_ce, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_383_ce <= grp_processImage_fu_299_grp_fu_383_p_ce;
        else 
            grp_fu_383_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_383_opcode_assign_proc : process(grp_processImage_fu_299_grp_fu_383_p_opcode, ap_CS_fsm_state55, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_383_opcode <= grp_processImage_fu_299_grp_fu_383_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_383_opcode <= ap_const_lv5_2;
        else 
            grp_fu_383_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_383_p0_assign_proc : process(dc_3_reg_1085, grp_processImage_fu_299_grp_fu_383_p_din0, ap_CS_fsm_state55, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_383_p0 <= grp_processImage_fu_299_grp_fu_383_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_383_p0 <= dc_3_reg_1085;
        else 
            grp_fu_383_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_383_p1_assign_proc : process(grp_processImage_fu_299_grp_fu_383_p_din1, ap_CS_fsm_state55, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_383_p1 <= grp_processImage_fu_299_grp_fu_383_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_383_p1 <= ap_const_lv32_41C80000;
        else 
            grp_fu_383_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_389_ce_assign_proc : process(grp_processImage_fu_299_grp_fu_389_p_ce, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_389_ce <= grp_processImage_fu_299_grp_fu_389_p_ce;
        else 
            grp_fu_389_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_389_p0_assign_proc : process(conv_i_reg_1165, ap_CS_fsm_state44, grp_processImage_fu_299_grp_fu_389_p_din0, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_389_p0 <= grp_processImage_fu_299_grp_fu_389_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_fu_389_p0 <= conv_i_reg_1165;
        else 
            grp_fu_389_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_389_p1_assign_proc : process(select_ln2815_fu_825_p3, ap_CS_fsm_state44, grp_processImage_fu_299_grp_fu_389_p_din1, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_389_p1 <= grp_processImage_fu_299_grp_fu_389_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_fu_389_p1 <= select_ln2815_fu_825_p3;
        else 
            grp_fu_389_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_770_ap_start_assign_proc : process(ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_770_ap_start <= ap_const_logic_1;
        else 
            grp_fu_770_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_770_p0 <= ap_const_lv32_1400000(27 - 1 downto 0);
    grp_fu_770_p1 <= 
        tmp_31_reg_1115 when (tmp_12_reg_1110(0) = '1') else 
        tmp_32_reg_1120;

    grp_fu_776_ap_start_assign_proc : process(ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            grp_fu_776_ap_start <= ap_const_logic_1;
        else 
            grp_fu_776_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_776_p0 <= ap_const_lv32_F00000(26 - 1 downto 0);
    grp_processImage_fu_299_ap_start <= grp_processImage_fu_299_ap_start_reg;
    icmp_ln2815_4_fu_810_p2 <= "1" when (trunc_ln2815_fu_800_p1 = ap_const_lv23_0) else "0";
    icmp_ln2815_fu_804_p2 <= "0" when (tmp_28_fu_790_p4 = ap_const_lv8_FF) else "1";
    icmp_ln2849_fu_411_p2 <= "1" when (signed(counter) < signed(ap_const_lv32_F0)) else "0";
    icmp_ln2854_fu_452_p2 <= "1" when (signed(add_ln2853_fu_440_p2) < signed(ap_const_lv32_F0)) else "0";
    icmp_ln2885_1_fu_499_p2 <= "1" when (trunc_ln2885_fu_489_p1 = ap_const_lv23_0) else "0";
    icmp_ln2885_2_fu_534_p2 <= "0" when (xs_exp_3_fu_520_p4 = ap_const_lv8_FF) else "1";
    icmp_ln2885_3_fu_540_p2 <= "1" when (trunc_ln2885_1_fu_530_p1 = ap_const_lv23_0) else "0";
    icmp_ln2885_fu_493_p2 <= "0" when (xs_exp_2_fu_479_p4 = ap_const_lv8_FF) else "1";
    inData_address0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_inData_address0;
    inData_ce0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2850_1_fu_251_inData_ce0;
    lshr_ln18_2_fu_630_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_2_fu_582_p1),to_integer(unsigned('0' & zext_ln18_2_fu_626_p1(31-1 downto 0)))));
    lshr_ln18_3_fu_731_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_3_fu_720_p1),to_integer(unsigned('0' & zext_ln18_3_fu_727_p1(31-1 downto 0)))));
    lshr_ln18_fu_909_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_fu_861_p1),to_integer(unsigned('0' & zext_ln18_fu_905_p1(31-1 downto 0)))));
    mantissa_2_fu_572_p4 <= ((ap_const_lv1_1 & trunc_ln2885_fu_489_p1) & ap_const_lv1_0);
    mantissa_3_fu_711_p4 <= ((ap_const_lv1_1 & trunc_ln2885_1_reg_1096) & ap_const_lv1_0);
    mantissa_fu_851_p4 <= ((ap_const_lv1_1 & trunc_ln505_fu_847_p1) & ap_const_lv1_0);
    or_ln2815_fu_816_p2 <= (icmp_ln2815_reg_1155 or icmp_ln2815_4_reg_1160);
    or_ln2885_1_fu_546_p2 <= (icmp_ln2885_3_fu_540_p2 or icmp_ln2885_2_fu_534_p2);
    or_ln2885_fu_505_p2 <= (icmp_ln2885_fu_493_p2 or icmp_ln2885_1_fu_499_p2);
    result_13_fu_921_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_2_reg_1141));
    result_17_fu_933_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_3_reg_1148));
    result_19_fu_1034_p3 <= 
        result_fu_1028_p2 when (xs_sign_reg_1232(0) = '1') else 
        val_fu_1023_p3;
    result_20_fu_926_p3 <= 
        result_13_fu_921_p2 when (xs_sign_2_reg_1104(0) = '1') else 
        val_2_reg_1141;
    result_21_fu_938_p3 <= 
        result_17_fu_933_p2 when (xs_sign_3_reg_1125(0) = '1') else 
        val_3_reg_1148;
    result_fu_1028_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_fu_1023_p3));

    result_h_Scale_address0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_Scale_address0, grp_processImage_fu_299_AllCandidates_h_address0, ap_CS_fsm_state56, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            result_h_Scale_address0 <= grp_processImage_fu_299_AllCandidates_h_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_h_Scale_address0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_Scale_address0;
        else 
            result_h_Scale_address0 <= "XXXXXXX";
        end if; 
    end process;


    result_h_Scale_ce0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_Scale_ce0, grp_processImage_fu_299_AllCandidates_h_ce0, ap_CS_fsm_state56, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            result_h_Scale_ce0 <= grp_processImage_fu_299_AllCandidates_h_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_h_Scale_ce0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_Scale_ce0;
        else 
            result_h_Scale_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_h_Scale_we0_assign_proc : process(grp_processImage_fu_299_AllCandidates_h_we0, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            result_h_Scale_we0 <= grp_processImage_fu_299_AllCandidates_h_we0;
        else 
            result_h_Scale_we0 <= ap_const_logic_0;
        end if; 
    end process;


    result_h_address0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_h_address0, grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_address0, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_h_address0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            result_h_address0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_h_address0;
        else 
            result_h_address0 <= "XXXXXXX";
        end if; 
    end process;


    result_h_ce0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_h_ce0, grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_ce0, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_h_ce0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            result_h_ce0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_h_ce0;
        else 
            result_h_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_h_d0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_h_d0, grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_d0, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_h_d0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            result_h_d0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_h_d0;
        else 
            result_h_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    result_h_we0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_h_we0, grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_we0, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_h_we0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_h_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            result_h_we0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_h_we0;
        else 
            result_h_we0 <= ap_const_logic_0;
        end if; 
    end process;

    result_size <= storemerge_reg_239;

    result_size_ap_vld_assign_proc : process(ap_CS_fsm_state58)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            result_size_ap_vld <= ap_const_logic_1;
        else 
            result_size_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    result_w_Scale_address0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_Scale_address0, grp_processImage_fu_299_AllCandidates_w_address0, ap_CS_fsm_state56, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            result_w_Scale_address0 <= grp_processImage_fu_299_AllCandidates_w_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_w_Scale_address0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_Scale_address0;
        else 
            result_w_Scale_address0 <= "XXXXXXX";
        end if; 
    end process;


    result_w_Scale_ce0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_Scale_ce0, grp_processImage_fu_299_AllCandidates_w_ce0, ap_CS_fsm_state56, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            result_w_Scale_ce0 <= grp_processImage_fu_299_AllCandidates_w_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_w_Scale_ce0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_Scale_ce0;
        else 
            result_w_Scale_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_w_Scale_we0_assign_proc : process(grp_processImage_fu_299_AllCandidates_w_we0, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            result_w_Scale_we0 <= grp_processImage_fu_299_AllCandidates_w_we0;
        else 
            result_w_Scale_we0 <= ap_const_logic_0;
        end if; 
    end process;


    result_w_address0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_w_address0, grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_address0, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_w_address0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            result_w_address0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_w_address0;
        else 
            result_w_address0 <= "XXXXXXX";
        end if; 
    end process;


    result_w_ce0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_w_ce0, grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_ce0, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_w_ce0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            result_w_ce0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_w_ce0;
        else 
            result_w_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_w_d0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_w_d0, grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_d0, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_w_d0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            result_w_d0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_w_d0;
        else 
            result_w_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    result_w_we0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_w_we0, grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_we0, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_w_we0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_w_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            result_w_we0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_w_we0;
        else 
            result_w_we0 <= ap_const_logic_0;
        end if; 
    end process;


    result_x_Scale_address0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_Scale_address0, grp_processImage_fu_299_AllCandidates_x_address0, ap_CS_fsm_state56, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            result_x_Scale_address0 <= grp_processImage_fu_299_AllCandidates_x_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_x_Scale_address0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_Scale_address0;
        else 
            result_x_Scale_address0 <= "XXXXXXX";
        end if; 
    end process;


    result_x_Scale_ce0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_Scale_ce0, grp_processImage_fu_299_AllCandidates_x_ce0, ap_CS_fsm_state56, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            result_x_Scale_ce0 <= grp_processImage_fu_299_AllCandidates_x_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_x_Scale_ce0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_Scale_ce0;
        else 
            result_x_Scale_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_x_Scale_we0_assign_proc : process(grp_processImage_fu_299_AllCandidates_x_we0, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            result_x_Scale_we0 <= grp_processImage_fu_299_AllCandidates_x_we0;
        else 
            result_x_Scale_we0 <= ap_const_logic_0;
        end if; 
    end process;


    result_x_address0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_x_address0, grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_address0, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_x_address0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            result_x_address0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_x_address0;
        else 
            result_x_address0 <= "XXXXXXX";
        end if; 
    end process;


    result_x_ce0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_x_ce0, grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_ce0, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_x_ce0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            result_x_ce0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_x_ce0;
        else 
            result_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_x_d0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_x_d0, grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_d0, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_x_d0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            result_x_d0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_x_d0;
        else 
            result_x_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    result_x_we0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_x_we0, grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_we0, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_x_we0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_x_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            result_x_we0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_x_we0;
        else 
            result_x_we0 <= ap_const_logic_0;
        end if; 
    end process;


    result_y_Scale_address0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_Scale_address0, grp_processImage_fu_299_AllCandidates_y_address0, ap_CS_fsm_state56, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            result_y_Scale_address0 <= grp_processImage_fu_299_AllCandidates_y_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_y_Scale_address0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_Scale_address0;
        else 
            result_y_Scale_address0 <= "XXXXXXX";
        end if; 
    end process;


    result_y_Scale_ce0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_Scale_ce0, grp_processImage_fu_299_AllCandidates_y_ce0, ap_CS_fsm_state56, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            result_y_Scale_ce0 <= grp_processImage_fu_299_AllCandidates_y_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_y_Scale_ce0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_Scale_ce0;
        else 
            result_y_Scale_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_y_Scale_we0_assign_proc : process(grp_processImage_fu_299_AllCandidates_y_we0, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            result_y_Scale_we0 <= grp_processImage_fu_299_AllCandidates_y_we0;
        else 
            result_y_Scale_we0 <= ap_const_logic_0;
        end if; 
    end process;


    result_y_address0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_y_address0, grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_address0, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_y_address0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            result_y_address0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_y_address0;
        else 
            result_y_address0 <= "XXXXXXX";
        end if; 
    end process;


    result_y_ce0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_y_ce0, grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_ce0, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_y_ce0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            result_y_ce0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_y_ce0;
        else 
            result_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_y_d0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_y_d0, grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_d0, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_y_d0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            result_y_d0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_y_d0;
        else 
            result_y_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    result_y_we0_assign_proc : process(grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_y_we0, grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_we0, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            result_y_we0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2922_3_fu_272_result_y_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            result_y_we0 <= grp_detectFaces_Pipeline_VITIS_LOOP_2855_2_fu_260_result_y_we0;
        else 
            result_y_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln18_4_fu_614_p3 <= 
        sext_ln18_5_fu_610_p1 when (tmp_12_fu_596_p3(0) = '1') else 
        add_ln317_fu_590_p2;
    select_ln18_6_fu_698_p3 <= 
        sext_ln18_7_fu_694_p1 when (tmp_14_fu_680_p3(0) = '1') else 
        add_ln317_1_fu_674_p2;
    select_ln18_fu_893_p3 <= 
        sext_ln18_fu_889_p1 when (tmp_fu_875_p3(0) = '1') else 
        add_ln486_fu_869_p2;
    select_ln2815_fu_825_p3 <= 
        ap_const_lv64_3FE0000000000000 when (and_ln2815_fu_820_p2(0) = '1') else 
        ap_const_lv64_BFE0000000000000;
    select_ln3417_fu_954_p3 <= 
        sub_ln3417_fu_948_p2 when (xs_sign_2_reg_1104(0) = '1') else 
        trunc_ln3417_fu_945_p1;
    select_ln3418_fu_981_p3 <= 
        sub_ln3418_fu_975_p2 when (xs_sign_3_reg_1125(0) = '1') else 
        trunc_ln3418_fu_972_p1;
        sext_ln18_4_fu_901_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln18_fu_893_p3),32));

        sext_ln18_5_fu_610_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln18_2_fu_604_p2),9));

        sext_ln18_6_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln18_4_fu_614_p3),32));

        sext_ln18_7_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln18_3_fu_688_p2),9));

        sext_ln18_8_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln18_6_reg_1136),32));

        sext_ln18_fu_889_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln18_fu_883_p2),12));

        sext_ln3417_fu_961_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln3417_fu_954_p3),28));

    shl_ln18_2_fu_636_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_2_fu_582_p1),to_integer(unsigned('0' & zext_ln18_2_fu_626_p1(31-1 downto 0)))));
    shl_ln18_3_fu_737_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_3_fu_720_p1),to_integer(unsigned('0' & zext_ln18_3_fu_727_p1(31-1 downto 0)))));
    shl_ln18_fu_915_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_fu_861_p1),to_integer(unsigned('0' & zext_ln18_fu_905_p1(31-1 downto 0)))));
    sub_ln18_2_fu_604_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_2_fu_479_p4));
    sub_ln18_3_fu_688_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_3_fu_520_p4));
    sub_ln18_fu_883_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(xs_exp_fu_837_p4));
    sub_ln3417_fu_948_p2 <= std_logic_vector(unsigned(ap_const_lv27_0) - unsigned(trunc_ln3417_fu_945_p1));
    sub_ln3418_fu_975_p2 <= std_logic_vector(unsigned(ap_const_lv24_0) - unsigned(trunc_ln3418_fu_972_p1));
    tmp_12_fu_596_p3 <= add_ln317_fu_590_p2(8 downto 8);
    tmp_14_fu_680_p3 <= add_ln317_1_fu_674_p2(8 downto 8);
    tmp_28_fu_790_p4 <= bitcast_ln2815_fu_786_p1(30 downto 23);
    tmp_30_fu_425_p3 <= (trunc_ln2849_fu_403_p1 & ap_const_lv6_0);
    tmp_33_fu_743_p4 <= lshr_ln18_3_fu_731_p2(55 downto 24);
    tmp_34_fu_753_p4 <= shl_ln18_3_fu_737_p2(55 downto 24);
    tmp_fu_875_p3 <= add_ln486_fu_869_p2(11 downto 11);
    tmp_s_fu_417_p3 <= (trunc_ln2849_1_fu_407_p1 & ap_const_lv8_0);
    trunc_ln2815_fu_800_p1 <= bitcast_ln2815_fu_786_p1(23 - 1 downto 0);
    trunc_ln2849_1_fu_407_p1 <= counter(9 - 1 downto 0);
    trunc_ln2849_fu_403_p1 <= counter(11 - 1 downto 0);
    trunc_ln2885_1_fu_530_p1 <= data_3_fu_517_p1(23 - 1 downto 0);
    trunc_ln2885_fu_489_p1 <= data_2_fu_476_p1(23 - 1 downto 0);
    trunc_ln3417_fu_945_p1 <= sdiv_ln3417_reg_1185(27 - 1 downto 0);
    trunc_ln3418_fu_972_p1 <= sdiv_ln3418_reg_1190(24 - 1 downto 0);
    trunc_ln505_fu_847_p1 <= data_fu_834_p1(52 - 1 downto 0);
    val_2_fu_706_p3 <= 
        tmp_31_reg_1115 when (tmp_12_reg_1110(0) = '1') else 
        tmp_32_reg_1120;
    val_3_fu_763_p3 <= 
        tmp_33_fu_743_p4 when (tmp_14_reg_1131(0) = '1') else 
        tmp_34_fu_753_p4;
    val_fu_1023_p3 <= 
        tmp_15_reg_1222 when (tmp_reg_1195(0) = '1') else 
        tmp_16_reg_1227;
    x_ratio_fu_965_p2 <= std_logic_vector(signed(sext_ln3417_fu_961_p1) + signed(ap_const_lv28_1));
    xs_exp_2_fu_479_p4 <= data_2_fu_476_p1(30 downto 23);
    xs_exp_3_fu_520_p4 <= data_3_fu_517_p1(30 downto 23);
    xs_exp_fu_837_p4 <= data_fu_834_p1(62 downto 52);
    y_ratio_fu_988_p2 <= std_logic_vector(unsigned(select_ln3418_fu_981_p3) + unsigned(ap_const_lv24_1));
    zext_ln15_2_fu_582_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_2_fu_572_p4),79));
    zext_ln15_3_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_3_fu_711_p4),79));
    zext_ln15_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_fu_851_p4),137));
    zext_ln18_2_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln18_6_fu_622_p1),79));
    zext_ln18_3_fu_727_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln18_8_fu_724_p1),79));
    zext_ln18_fu_905_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln18_4_fu_901_p1),137));
    zext_ln317_1_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_3_fu_520_p4),9));
    zext_ln317_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_2_fu_479_p4),9));
    zext_ln486_fu_865_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_fu_837_p4),12));
end behav;
