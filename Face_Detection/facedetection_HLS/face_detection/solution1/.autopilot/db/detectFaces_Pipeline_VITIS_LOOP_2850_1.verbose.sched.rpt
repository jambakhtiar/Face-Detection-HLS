

================================================================
== Vitis HLS Report for 'detectFaces_Pipeline_VITIS_LOOP_2850_1'
================================================================
* Date:           Wed Sep  4 13:42:51 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        face_detection
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: artix7
* Target device:  xc7a50ti-csg324-1L


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.514 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      322|      322|  3.220 us|  3.220 us|  322|  322|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                     |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_2850_1  |      320|      320|         2|          1|          1|   320|       yes|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.33>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%j = alloca i32 1" [../source/haar.cpp:2834]   --->   Operation 5 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %inData, void @empty_2, i32 0, i32 0, void @empty_3, i32 4294967295, i32 0, void @empty_3, void @empty_3, void @empty_3, i32 0, i32 0, i32 0, i32 0, void @empty_3, void @empty_3, i32 4294967295, i32 0"   --->   Operation 6 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%add_ln2851_read = read i17 @_ssdm_op_Read.ap_auto.i17, i17 %add_ln2851"   --->   Operation 7 'read' 'add_ln2851_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (1.61ns)   --->   "%store_ln2834 = store i9 0, i9 %j" [../source/haar.cpp:2834]   --->   Operation 8 'store' 'store_ln2834' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 9 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%j_3 = load i9 %j" [../source/haar.cpp:2850]   --->   Operation 10 'load' 'j_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (2.11ns)   --->   "%icmp_ln2850 = icmp_eq  i9 %j_3, i9 320" [../source/haar.cpp:2850]   --->   Operation 11 'icmp' 'icmp_ln2850' <Predicate = true> <Delay = 2.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (2.11ns)   --->   "%add_ln2850 = add i9 %j_3, i9 1" [../source/haar.cpp:2850]   --->   Operation 12 'add' 'add_ln2850' <Predicate = true> <Delay = 2.11> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%br_ln2850 = br i1 %icmp_ln2850, void %for.inc.split, void %for.end.exitStub" [../source/haar.cpp:2850]   --->   Operation 13 'br' 'br_ln2850' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%zext_ln2850 = zext i9 %j_3" [../source/haar.cpp:2850]   --->   Operation 14 'zext' 'zext_ln2850' <Predicate = (!icmp_ln2850)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%inData_addr = getelementptr i8 %inData, i64 0, i64 %zext_ln2850" [../source/haar.cpp:2851]   --->   Operation 15 'getelementptr' 'inData_addr' <Predicate = (!icmp_ln2850)> <Delay = 0.00>
ST_1 : Operation 16 [2/2] (3.25ns)   --->   "%inData_load = load i9 %inData_addr" [../source/haar.cpp:2851]   --->   Operation 16 'load' 'inData_load' <Predicate = (!icmp_ln2850)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 320> <RAM>
ST_1 : Operation 17 [1/1] (1.61ns)   --->   "%store_ln2834 = store i9 %add_ln2850, i9 %j" [../source/haar.cpp:2834]   --->   Operation 17 'store' 'store_ln2834' <Predicate = (!icmp_ln2850)> <Delay = 1.61>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 28 'ret' 'ret_ln0' <Predicate = (icmp_ln2850)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.51>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%zext_ln2851 = zext i9 %j_3" [../source/haar.cpp:2851]   --->   Operation 18 'zext' 'zext_ln2851' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (2.18ns)   --->   "%add_ln2851_1 = add i17 %add_ln2851_read, i17 %zext_ln2851" [../source/haar.cpp:2851]   --->   Operation 19 'add' 'add_ln2851_1' <Predicate = true> <Delay = 2.18> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln2851_1 = zext i17 %add_ln2851_1" [../source/haar.cpp:2851]   --->   Operation 20 'zext' 'zext_ln2851_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%Data_addr = getelementptr i8 %Data, i64 0, i64 %zext_ln2851_1" [../source/haar.cpp:2851]   --->   Operation 21 'getelementptr' 'Data_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%specpipeline_ln2834 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_3" [../source/haar.cpp:2834]   --->   Operation 22 'specpipeline' 'specpipeline_ln2834' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%speclooptripcount_ln2834 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 320, i64 320, i64 320" [../source/haar.cpp:2834]   --->   Operation 23 'speclooptripcount' 'speclooptripcount_ln2834' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%specloopname_ln2850 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [../source/haar.cpp:2850]   --->   Operation 24 'specloopname' 'specloopname_ln2850' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/2] (3.25ns)   --->   "%inData_load = load i9 %inData_addr" [../source/haar.cpp:2851]   --->   Operation 25 'load' 'inData_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 320> <RAM>
ST_2 : Operation 26 [1/1] (3.25ns)   --->   "%store_ln2851 = store i8 %inData_load, i17 %Data_addr" [../source/haar.cpp:2851]   --->   Operation 26 'store' 'store_ln2851' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 76800> <RAM>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%br_ln2850 = br void %for.inc" [../source/haar.cpp:2850]   --->   Operation 27 'br' 'br_ln2850' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.339ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln2834', ../source/haar.cpp:2834) of constant 0 on local variable 'j', ../source/haar.cpp:2834 [7]  (1.610 ns)
	'load' operation 9 bit ('j', ../source/haar.cpp:2850) on local variable 'j', ../source/haar.cpp:2834 [10]  (0.000 ns)
	'add' operation 9 bit ('add_ln2850', ../source/haar.cpp:2850) [12]  (2.119 ns)
	'store' operation 0 bit ('store_ln2834', ../source/haar.cpp:2834) of variable 'add_ln2850', ../source/haar.cpp:2850 on local variable 'j', ../source/haar.cpp:2834 [26]  (1.610 ns)

 <State 2>: 6.514ns
The critical path consists of the following:
	'load' operation 8 bit ('inData_load', ../source/haar.cpp:2851) on array 'inData' [24]  (3.257 ns)
	'store' operation 0 bit ('store_ln2851', ../source/haar.cpp:2851) of variable 'inData_load', ../source/haar.cpp:2851 on array 'Data' [25]  (3.257 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
